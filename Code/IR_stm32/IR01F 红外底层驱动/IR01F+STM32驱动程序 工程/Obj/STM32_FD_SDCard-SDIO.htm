<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\STM32_FD_SDCard-SDIO.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\STM32_FD_SDCard-SDIO.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Thu Jan 10 19:52:20 2013
<BR><P>
<H3>Maximum Stack Usage =        924 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Get_Learn_Data &rArr; get_remote_study_data &rArr; compdata &rArr; getfigure &rArr; judgesame &rArr; cmpdata
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[e07e90]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e07e90]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[e080e8]">Reset_Handler</a>
 <LI><a href="#[e05514]">NMI_Handler</a>
 <LI><a href="#[e0558c]">HardFault_Handler</a>
 <LI><a href="#[e05550]">MemManage_Handler</a>
 <LI><a href="#[e05640]">BusFault_Handler</a>
 <LI><a href="#[e05370]">UsageFault_Handler</a>
 <LI><a href="#[e05460]">SVC_Handler</a>
 <LI><a href="#[e05604]">DebugMon_Handler</a>
 <LI><a href="#[e054d8]">PendSV_Handler</a>
 <LI><a href="#[e05424]">SysTick_Handler</a>
 <LI><a href="#[e070bc]">WWDG_IRQHandler</a>
 <LI><a href="#[e07800]">PVD_IRQHandler</a>
 <LI><a href="#[e07620]">TAMPER_IRQHandler</a>
 <LI><a href="#[e0774c]">RTC_IRQHandler</a>
 <LI><a href="#[e07968]">FLASH_IRQHandler</a>
 <LI><a href="#[e077c4]">RCC_IRQHandler</a>
 <LI><a href="#[e07b0c]">EXTI0_IRQHandler</a>
 <LI><a href="#[e055c8]">EXTI1_IRQHandler</a>
 <LI><a href="#[e07a58]">EXTI2_IRQHandler</a>
 <LI><a href="#[e07a1c]">EXTI3_IRQHandler</a>
 <LI><a href="#[e079e0]">EXTI4_IRQHandler</a>
 <LI><a href="#[e07da0]">DMA1_Channel1_IRQHandler</a>
 <LI><a href="#[e07d64]">DMA1_Channel2_IRQHandler</a>
 <LI><a href="#[e07d28]">DMA1_Channel3_IRQHandler</a>
 <LI><a href="#[e07cec]">DMA1_Channel4_IRQHandler</a>
 <LI><a href="#[e07cb0]">DMA1_Channel5_IRQHandler</a>
 <LI><a href="#[e07c74]">DMA1_Channel6_IRQHandler</a>
 <LI><a href="#[e07c38]">DMA1_Channel7_IRQHandler</a>
 <LI><a href="#[e07e90]">ADC1_2_IRQHandler</a>
 <LI><a href="#[e053e8]">USB_HP_CAN1_TX_IRQHandler</a>
 <LI><a href="#[e053ac]">USB_LP_CAN1_RX0_IRQHandler</a>
 <LI><a href="#[e07e18]">CAN1_RX1_IRQHandler</a>
 <LI><a href="#[e07ddc]">CAN1_SCE_IRQHandler</a>
 <LI><a href="#[e079a4]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[e075e4]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[e07530]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[e0756c]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[e075a8]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[e074f4]">TIM2_IRQHandler</a>
 <LI><a href="#[e074b8]">TIM3_IRQHandler</a>
 <LI><a href="#[e0747c]">TIM4_IRQHandler</a>
 <LI><a href="#[e078b4]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[e078f0]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[e0783c]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[e07878]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[e076d4]">SPI1_IRQHandler</a>
 <LI><a href="#[e07698]">SPI2_IRQHandler</a>
 <LI><a href="#[e07224]">USART1_IRQHandler</a>
 <LI><a href="#[e071e8]">USART2_IRQHandler</a>
 <LI><a href="#[e071ac]">USART3_IRQHandler</a>
 <LI><a href="#[e07ad0]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[e07788]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[e07170]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[e0738c]">TIM8_BRK_IRQHandler</a>
 <LI><a href="#[e072d8]">TIM8_UP_IRQHandler</a>
 <LI><a href="#[e07314]">TIM8_TRG_COM_IRQHandler</a>
 <LI><a href="#[e07350]">TIM8_CC_IRQHandler</a>
 <LI><a href="#[e07e54]">ADC3_IRQHandler</a>
 <LI><a href="#[e0792c]">FSMC_IRQHandler</a>
 <LI><a href="#[e0549c]">SDIO_IRQHandler</a>
 <LI><a href="#[e07440]">TIM5_IRQHandler</a>
 <LI><a href="#[e0765c]">SPI3_IRQHandler</a>
 <LI><a href="#[e0729c]">UART4_IRQHandler</a>
 <LI><a href="#[e07260]">UART5_IRQHandler</a>
 <LI><a href="#[e07404]">TIM6_IRQHandler</a>
 <LI><a href="#[e073c8]">TIM7_IRQHandler</a>
 <LI><a href="#[e07bfc]">DMA2_Channel1_IRQHandler</a>
 <LI><a href="#[e07bc0]">DMA2_Channel2_IRQHandler</a>
 <LI><a href="#[e07b84]">DMA2_Channel3_IRQHandler</a>
 <LI><a href="#[e07b48]">DMA2_Channel4_5_IRQHandler</a>
 <LI><a href="#[e0a08c]">main</a>
 <LI><a href="#[e084a8]">SystemInit</a>
 <LI><a href="#[1480334]">__main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1480334]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[147ffec]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[147fec0]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[147fc68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[147fe84]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[147fc68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[147fd94]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[e080e8]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07e90]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e07e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e07e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07e54]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07e18]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07ddc]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07da0]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07d64]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07d28]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07cec]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07cb0]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07c74]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07c38]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07bfc]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07bc0]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07b84]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07b48]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07b0c]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07ad0]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07a58]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07a1c]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e079e0]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e079a4]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07968]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0792c]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e078f0]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e078b4]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07878]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0783c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07800]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e077c4]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07788]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0774c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e076d4]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07698]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0765c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07620]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e075e4]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e075a8]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0756c]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07530]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e074f4]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e074b8]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0747c]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07440]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07404]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e073c8]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0738c]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07350]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07314]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e072d8]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0729c]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07260]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07224]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e071e8]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e071ac]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e07170]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e070bc]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[147fc68]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[147fe84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[147fec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[147fc2c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[e03534]"></a>All_Send_Data_Right_Move</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, ir01f_ic_ data_inout _driver.o(i.All_Send_Data_Right_Move))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = All_Send_Data_Right_Move
</UL>
<BR>[Called By]<UL><LI><a href="#[e033cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetogglebit
</UL>

<P><STRONG><a name="[e05640]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e05604]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0012c]"></a>DelayTime</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ir01f_ic_ driver.o(i.DelayTime))
<BR><BR>[Called By]<UL><LI><a href="#[dffe98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendACKSign
<LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
<LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[dfffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadData
<LI><a href="#[e000f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetACKSign
<LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
</UL>

<P><STRONG><a name="[e055c8]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0a050]"></a>GPIO_Init</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[dffb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDA_IO
<LI><a href="#[dffb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SCL_IO
<LI><a href="#[dffb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BUSY_IO
<LI><a href="#[dffbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAOutput
<LI><a href="#[dffc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAInput
<LI><a href="#[dffcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLOutput
<LI><a href="#[dffe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBUSYInput
<LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e0a104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
</UL>

<P><STRONG><a name="[e0a014]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[e00078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDINStatus
<LI><a href="#[e09f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBUSYStatus
<LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dffad8]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[dffc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDALow
<LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
</UL>

<P><STRONG><a name="[e09fd8]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[dffb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDA_IO
<LI><a href="#[dffb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SCL_IO
<LI><a href="#[dffb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BUSY_IO
<LI><a href="#[dffc7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAHigh
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e000f0]"></a>GetACKSign</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.GetACKSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetACKSign &rArr; SetSDAInput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAInput
<LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[e00078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDINStatus
<LI><a href="#[e0012c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
</UL>

<P><STRONG><a name="[e09f9c]"></a>GetBUSYStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.GetBUSYStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetBUSYStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[e0a014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e00078]"></a>GetDINStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.GetDINStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetDINStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[e0a014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[dfffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadData
<LI><a href="#[e000f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetACKSign
</UL>

<P><STRONG><a name="[e09f60]"></a>Get_Learn_Data</STRONG> (Thumb, 136 bytes, Stack size 136 bytes, ir01f_ic_ data_inout _driver.o(i.Get_Learn_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 908<LI>Call Chain = Get_Learn_Data &rArr; get_remote_study_data &rArr; compdata &rArr; getfigure &rArr; judgesame &rArr; cmpdata
</UL>
<BR>[Calls]<UL><LI><a href="#[e03174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_remote_study_data
<LI><a href="#[e032a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_remote_study_data
</UL>
<BR>[Called By]<UL><LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e0558c]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e0003c]"></a>I2CClose</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.I2CClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2CClose &rArr; SetSDAOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAOutput
<LI><a href="#[dffc7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAHigh
<LI><a href="#[dffcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLOutput
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
</UL>

<P><STRONG><a name="[e00000]"></a>I2COpen</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.I2COpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2COpen &rArr; Set_SDA_IO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDA_IO
<LI><a href="#[dffb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SCL_IO
<LI><a href="#[dffbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAOutput
<LI><a href="#[dffc7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAHigh
<LI><a href="#[dffcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLOutput
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
</UL>

<P><STRONG><a name="[dfffc4]"></a>I2CReadData</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ir01f_ic_ driver.o(i.I2CReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2CReadData &rArr; SendACKSign &rArr; SetSDAOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAInput
<LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[dffe98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendACKSign
<LI><a href="#[e00078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDINStatus
<LI><a href="#[e0012c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
</UL>

<P><STRONG><a name="[dfff88]"></a>I2CStart</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.I2CStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2CStart &rArr; SetSDAOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAOutput
<LI><a href="#[dffc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDALow
<LI><a href="#[dffc7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAHigh
<LI><a href="#[dffcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLOutput
<LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[e0012c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
</UL>

<P><STRONG><a name="[dfff4c]"></a>I2CStop</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.I2CStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2CStop &rArr; SetSDAOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAOutput
<LI><a href="#[dffc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDALow
<LI><a href="#[dffc7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAHigh
<LI><a href="#[dffcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLOutput
<LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[e0012c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
</UL>

<P><STRONG><a name="[dfff10]"></a>I2CWriteData</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, ir01f_ic_ driver.o(i.I2CWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2CWriteData &rArr; GetACKSign &rArr; SetSDAInput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAOutput
<LI><a href="#[dffc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDALow
<LI><a href="#[dffc7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAHigh
<LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[e000f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetACKSign
<LI><a href="#[e0012c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
</UL>

<P><STRONG><a name="[e0a140]"></a>ID_Delay_ms</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(i.ID_Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e09f24]"></a>IR01F_Init_Cfg</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.IR01F_Init_Cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IR01F_Init_Cfg &rArr; Set_SDA_IO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDA_IO
<LI><a href="#[dffb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SCL_IO
<LI><a href="#[dffb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BUSY_IO
<LI><a href="#[dffbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAOutput
<LI><a href="#[dffc7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAHigh
<LI><a href="#[dffcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLOutput
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[dffe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBUSYInput
</UL>
<BR>[Called By]<UL><LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e09ee8]"></a>IR_Learn_Start</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.IR_Learn_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = IR_Learn_Start &rArr; I2CWriteData &rArr; GetACKSign &rArr; SetSDAInput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[dffed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteDelayms
<LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
<LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[e00000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2COpen
<LI><a href="#[e0003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CClose
<LI><a href="#[e0012c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e034f8]"></a>JudgeToggleBit</STRONG> (Thumb, 2632 bytes, Stack size 76 bytes, ir01f_ic_ data_inout _driver.o(i.JudgeToggleBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = JudgeToggleBit
</UL>
<BR>[Calls]<UL><LI><a href="#[e03408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acmpbandc
</UL>
<BR>[Called By]<UL><LI><a href="#[e031ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keytogglebit
</UL>

<P><STRONG><a name="[e05550]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e034bc]"></a>Modifywave</STRONG> (Thumb, 386 bytes, Stack size 40 bytes, ir01f_ic_ data_inout _driver.o(i.Modifywave))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Modifywave
</UL>
<BR>[Called By]<UL><LI><a href="#[e03318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compdata
</UL>

<P><STRONG><a name="[e05514]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e054d8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e09eac]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[dffb14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDA_IO
<LI><a href="#[dffb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SCL_IO
<LI><a href="#[dffb8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BUSY_IO
<LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e0a104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
</UL>

<P><STRONG><a name="[1483a0c]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[e09d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[e03480]"></a>Reload_Data_Buff</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ir01f_ic_ data_inout _driver.o(i.Reload_Data_Buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Reload_Data_Buff
</UL>
<BR>[Called By]<UL><LI><a href="#[e033cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetogglebit
</UL>

<P><STRONG><a name="[dffed4]"></a>RemoteDelayms</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ir01f_ic_ driver.o(i.RemoteDelayms))
<BR><BR>[Called By]<UL><LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
</UL>

<P><STRONG><a name="[e0549c]"></a>SDIO_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SDIO_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e05460]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[dffe98]"></a>SendACKSign</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.SendACKSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendACKSign &rArr; SetSDAOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDAOutput
<LI><a href="#[dffc04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDALow
<LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[e0012c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[dfffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadData
</UL>

<P><STRONG><a name="[e09e70]"></a>Send_IR_Data</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, ir01f_ic_ driver.o(i.Send_IR_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Send_IR_Data &rArr; I2CWriteData &rArr; GetACKSign &rArr; SetSDAInput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[dffed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteDelayms
<LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
<LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[e00000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2COpen
<LI><a href="#[e0003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CClose
<LI><a href="#[e0012c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dffe20]"></a>SetBUSYInput</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.SetBUSYInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetBUSYInput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0a050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e09f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR01F_Init_Cfg
</UL>

<P><STRONG><a name="[dffd6c]"></a>SetSCLHigh</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.SetSCLHigh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSCLHigh
</UL>
<BR>[Calls]<UL><LI><a href="#[e09fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[dffe98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendACKSign
<LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
<LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[dfffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadData
<LI><a href="#[e00000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2COpen
<LI><a href="#[e0003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CClose
<LI><a href="#[e000f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetACKSign
<LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
<LI><a href="#[e09f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR01F_Init_Cfg
</UL>

<P><STRONG><a name="[dffcf4]"></a>SetSCLLow</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.SetSCLLow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSCLLow
</UL>
<BR>[Calls]<UL><LI><a href="#[dffad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[dffe98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendACKSign
<LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
<LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[dfffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadData
<LI><a href="#[e000f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetACKSign
<LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
</UL>

<P><STRONG><a name="[dffcb8]"></a>SetSCLOutput</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.SetSCLOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetSCLOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0a050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[e00000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2COpen
<LI><a href="#[e0003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CClose
<LI><a href="#[e09f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR01F_Init_Cfg
</UL>

<P><STRONG><a name="[dffc7c]"></a>SetSDAHigh</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.SetSDAHigh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSDAHigh
</UL>
<BR>[Calls]<UL><LI><a href="#[e09fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
<LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[e00000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2COpen
<LI><a href="#[e0003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CClose
<LI><a href="#[e09f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR01F_Init_Cfg
</UL>

<P><STRONG><a name="[dffc40]"></a>SetSDAInput</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.SetSDAInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetSDAInput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0a050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[dfffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadData
<LI><a href="#[e000f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetACKSign
</UL>

<P><STRONG><a name="[dffc04]"></a>SetSDALow</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.SetSDALow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSDALow
</UL>
<BR>[Calls]<UL><LI><a href="#[dffad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[dffe98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendACKSign
<LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
<LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
</UL>

<P><STRONG><a name="[dffbc8]"></a>SetSDAOutput</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.SetSDAOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetSDAOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0a050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[dffe98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendACKSign
<LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
<LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[e00000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2COpen
<LI><a href="#[e0003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CClose
<LI><a href="#[e09f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR01F_Init_Cfg
</UL>

<P><STRONG><a name="[dffb8c]"></a>Set_BUSY_IO</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.Set_BUSY_IO))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_BUSY_IO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e09eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e09fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e0a050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e09f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR01F_Init_Cfg
</UL>

<P><STRONG><a name="[dffb50]"></a>Set_SCL_IO</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.Set_SCL_IO))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_SCL_IO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e09eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e09fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e0a050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e00000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2COpen
<LI><a href="#[e09f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR01F_Init_Cfg
</UL>

<P><STRONG><a name="[dffb14]"></a>Set_SDA_IO</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ir01f_ic_ driver.o(i.Set_SDA_IO))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_SDA_IO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e09eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e09fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e0a050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e00000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2COpen
<LI><a href="#[e09f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR01F_Init_Cfg
</UL>

<P><STRONG><a name="[e03444]"></a>Some_Data_Right_Move1</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ir01f_ic_ data_inout _driver.o(i.Some_Data_Right_Move1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Some_Data_Right_Move1
</UL>
<BR>[Called By]<UL><LI><a href="#[e033cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetogglebit
</UL>

<P><STRONG><a name="[e05424]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e084a8]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[e09150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[e09e34]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[e0a104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
</UL>

<P><STRONG><a name="[e0a104]"></a>USART_Configuration</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, main.o(i.USART_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[e09d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[e09dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[e09e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[e09eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e0a050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e09df8]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[e0a0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OUT
</UL>

<P><STRONG><a name="[e09dbc]"></a>USART_ITConfig</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e0a104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
</UL>

<P><STRONG><a name="[e09d80]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1483a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[e0a104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
</UL>

<P><STRONG><a name="[e0a0c8]"></a>USART_OUT</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, main.o(i.USART_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART_OUT
</UL>
<BR>[Calls]<UL><LI><a href="#[e09d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[e09df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e0a08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e09d44]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[e0a0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OUT
</UL>

<P><STRONG><a name="[e053e8]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USB_HP_CAN1_TX_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e053ac]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USB_LP_CAN1_RX0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e05370]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[147f86c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[147f830]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[147f7f4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[e03408]"></a>acmpbandc</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ir01f_ic_ data_inout _driver.o(i.acmpbandc))
<BR><BR>[Called By]<UL><LI><a href="#[e033cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetogglebit
<LI><a href="#[e034f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeToggleBit
</UL>

<P><STRONG><a name="[e033cc]"></a>changetogglebit</STRONG> (Thumb, 2382 bytes, Stack size 120 bytes, ir01f_ic_ data_inout _driver.o(i.changetogglebit))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = changetogglebit &rArr; All_Send_Data_Right_Move
</UL>
<BR>[Calls]<UL><LI><a href="#[e03390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmpaequbtog
<LI><a href="#[e03408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acmpbandc
<LI><a href="#[e03444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Some_Data_Right_Move1
<LI><a href="#[e03480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reload_Data_Buff
<LI><a href="#[e03534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Send_Data_Right_Move
</UL>
<BR>[Called By]<UL><LI><a href="#[e031ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keytogglebit
</UL>

<P><STRONG><a name="[e03390]"></a>cmpaequbtog</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, ir01f_ic_ data_inout _driver.o(i.cmpaequbtog))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cmpaequbtog
</UL>
<BR>[Called By]<UL><LI><a href="#[e033cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetogglebit
</UL>

<P><STRONG><a name="[e03354]"></a>cmpdata</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, ir01f_ic_ data_inout _driver.o(i.cmpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cmpdata
</UL>
<BR>[Called By]<UL><LI><a href="#[e03228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judgesame
</UL>

<P><STRONG><a name="[e03318]"></a>compdata</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ir01f_ic_ data_inout _driver.o(i.compdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = compdata &rArr; getfigure &rArr; judgesame &rArr; cmpdata
</UL>
<BR>[Calls]<UL><LI><a href="#[e031b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modifywavem708
<LI><a href="#[e03264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getfigure
<LI><a href="#[e032dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delfeng
<LI><a href="#[e034bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modifywave
</UL>
<BR>[Called By]<UL><LI><a href="#[e032a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_remote_study_data
</UL>

<P><STRONG><a name="[e032dc]"></a>delfeng</STRONG> (Thumb, 348 bytes, Stack size 48 bytes, ir01f_ic_ data_inout _driver.o(i.delfeng))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = delfeng
</UL>
<BR>[Called By]<UL><LI><a href="#[e03318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compdata
</UL>

<P><STRONG><a name="[e032a0]"></a>get_remote_study_data</STRONG> (Thumb, 94 bytes, Stack size 576 bytes, ir01f_ic_ data_inout _driver.o(i.get_remote_study_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = get_remote_study_data &rArr; compdata &rArr; getfigure &rArr; judgesame &rArr; cmpdata
</UL>
<BR>[Calls]<UL><LI><a href="#[e03138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e03318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compdata
</UL>
<BR>[Called By]<UL><LI><a href="#[e09f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Learn_Data
</UL>

<P><STRONG><a name="[e03264]"></a>getfigure</STRONG> (Thumb, 758 bytes, Stack size 104 bytes, ir01f_ic_ data_inout _driver.o(i.getfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = getfigure &rArr; judgesame &rArr; cmpdata
</UL>
<BR>[Calls]<UL><LI><a href="#[e03228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judgesame
</UL>
<BR>[Called By]<UL><LI><a href="#[e03318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compdata
</UL>

<P><STRONG><a name="[e03228]"></a>judgesame</STRONG> (Thumb, 114 bytes, Stack size 52 bytes, ir01f_ic_ data_inout _driver.o(i.judgesame))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = judgesame &rArr; cmpdata
</UL>
<BR>[Calls]<UL><LI><a href="#[e03354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmpdata
</UL>
<BR>[Called By]<UL><LI><a href="#[e03264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getfigure
</UL>

<P><STRONG><a name="[e031ec]"></a>keytogglebit</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, ir01f_ic_ data_inout _driver.o(i.keytogglebit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = keytogglebit &rArr; changetogglebit &rArr; All_Send_Data_Right_Move
</UL>
<BR>[Calls]<UL><LI><a href="#[e033cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetogglebit
<LI><a href="#[e034f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeToggleBit
</UL>
<BR>[Called By]<UL><LI><a href="#[e03174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_remote_study_data
</UL>

<P><STRONG><a name="[e0a08c]"></a>main</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 924<LI>Call Chain = main &rArr; Get_Learn_Data &rArr; get_remote_study_data &rArr; compdata &rArr; getfigure &rArr; judgesame &rArr; cmpdata
</UL>
<BR>[Calls]<UL><LI><a href="#[e09e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_IR_Data
<LI><a href="#[e09eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e09ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Learn_Start
<LI><a href="#[e09f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR01F_Init_Cfg
<LI><a href="#[e09f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Learn_Data
<LI><a href="#[e09f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBUSYStatus
<LI><a href="#[e09fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e0a014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[e0a050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[e0a0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OUT
<LI><a href="#[e0a104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
<LI><a href="#[e0a140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID_Delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[e031b0]"></a>modifywavem708</STRONG> (Thumb, 456 bytes, Stack size 44 bytes, ir01f_ic_ data_inout _driver.o(i.modifywavem708))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = modifywavem708
</UL>
<BR>[Called By]<UL><LI><a href="#[e03318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compdata
</UL>

<P><STRONG><a name="[e03138]"></a>readI2C</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, ir01f_ic_ driver.o(i.readI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = readI2C &rArr; I2CWriteData &rArr; GetACKSign &rArr; SetSDAInput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dffcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLLow
<LI><a href="#[dffd6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSCLHigh
<LI><a href="#[dffed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteDelayms
<LI><a href="#[dfff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteData
<LI><a href="#[dfff4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[dfff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[dfffc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadData
<LI><a href="#[e00000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2COpen
<LI><a href="#[e0003c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CClose
<LI><a href="#[e0012c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[e032a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_remote_study_data
</UL>

<P><STRONG><a name="[e03174]"></a>send_remote_study_data</STRONG> (Thumb, 146 bytes, Stack size 468 bytes, ir01f_ic_ data_inout _driver.o(i.send_remote_study_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = send_remote_study_data &rArr; keytogglebit &rArr; changetogglebit &rArr; All_Send_Data_Right_Move
</UL>
<BR>[Calls]<UL><LI><a href="#[e031ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keytogglebit
</UL>
<BR>[Called By]<UL><LI><a href="#[e09f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Learn_Data
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[e09150]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[e09114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[e084a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e09114]"></a>SetSysClockTo72</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Called By]<UL><LI><a href="#[e09150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
