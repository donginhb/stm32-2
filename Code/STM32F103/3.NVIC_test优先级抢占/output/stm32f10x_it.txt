; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\output\stm32f10x_it.o --depend=.\output\stm32f10x_it.d --device=DARMSTM --apcs=interwork -O3 -I.\ -Id:\Keil\ARM\INC\ST\STM32F10x --omf_browse=.\output\stm32f10x_it.crf stm32f10x_it.c]
                          THUMB

                          AREA ||i.ADC_IRQHandler||, CODE, READONLY, ALIGN=1

                  ADC_IRQHandler PROC
;;;352    *******************************************************************************/
;;;353    void ADC_IRQHandler(void)
000000  4770              BX       lr
;;;354    {
;;;355    }
;;;356    
                          ENDP


                          AREA ||i.BusFaultException||, CODE, READONLY, ALIGN=1

                  BusFaultException PROC
;;;78     *******************************************************************************/
;;;79     void BusFaultException(void)
000000  4770              BX       lr
;;;80     {
;;;81     }
;;;82     
                          ENDP


                          AREA ||i.CAN_RX1_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAN_RX1_IRQHandler PROC
;;;387    *******************************************************************************/
;;;388    void CAN_RX1_IRQHandler(void)
000000  4770              BX       lr
;;;389    {
;;;390    }
;;;391    
                          ENDP


                          AREA ||i.CAN_SCE_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAN_SCE_IRQHandler PROC
;;;398    *******************************************************************************/
;;;399    void CAN_SCE_IRQHandler(void)
000000  4770              BX       lr
;;;400    {
;;;401    }
;;;402    
                          ENDP


                          AREA ||i.DMAChannel1_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMAChannel1_IRQHandler PROC
;;;275    *******************************************************************************/
;;;276    void DMAChannel1_IRQHandler(void)
000000  4770              BX       lr
;;;277    {
;;;278    }
;;;279    
                          ENDP


                          AREA ||i.DMAChannel2_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMAChannel2_IRQHandler PROC
;;;286    *******************************************************************************/
;;;287    void DMAChannel2_IRQHandler(void)
000000  4770              BX       lr
;;;288    {
;;;289    }
;;;290    
                          ENDP


                          AREA ||i.DMAChannel3_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMAChannel3_IRQHandler PROC
;;;297    *******************************************************************************/
;;;298    void DMAChannel3_IRQHandler(void)
000000  4770              BX       lr
;;;299    {
;;;300    }
;;;301    
                          ENDP


                          AREA ||i.DMAChannel4_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMAChannel4_IRQHandler PROC
;;;308    *******************************************************************************/
;;;309    void DMAChannel4_IRQHandler(void)
000000  4770              BX       lr
;;;310    {
;;;311    }
;;;312    
                          ENDP


                          AREA ||i.DMAChannel5_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMAChannel5_IRQHandler PROC
;;;319    *******************************************************************************/
;;;320    void DMAChannel5_IRQHandler(void)
000000  4770              BX       lr
;;;321    {
;;;322    }
;;;323    
                          ENDP


                          AREA ||i.DMAChannel6_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMAChannel6_IRQHandler PROC
;;;330    *******************************************************************************/
;;;331    void DMAChannel6_IRQHandler(void)
000000  4770              BX       lr
;;;332    {
;;;333    }
;;;334    
                          ENDP


                          AREA ||i.DMAChannel7_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMAChannel7_IRQHandler PROC
;;;341    *******************************************************************************/
;;;342    void DMAChannel7_IRQHandler(void)
000000  4770              BX       lr
;;;343    {
;;;344    }
;;;345    
                          ENDP


                          AREA ||i.DebugMonitor||, CODE, READONLY, ALIGN=1

                  DebugMonitor PROC
;;;100    *******************************************************************************/
;;;101    void DebugMonitor(void)
000000  4770              BX       lr
;;;102    {
;;;103    }
;;;104    
                          ENDP


                          AREA ||i.EXTI0_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI0_IRQHandler PROC
;;;215    *******************************************************************************/
;;;216    void EXTI0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;217    {
;;;218      /* Generate SysTick exception */
;;;219      NVIC_SetSystemHandlerPendingBit(SystemHandler_SysTick);
000002  4804              LDR      r0,|L13.20|
000004  f7fffffe          BL       NVIC_SetSystemHandlerPendingBit
;;;220    
;;;221      /* Clear EXTI Line0 pending bit */
;;;222      EXTI_ClearITPendingBit(EXTI_Line0);
000008  e8bd4010          POP      {r4,lr}
00000c  2001              MOVS     r0,#1
00000e  f7ffbffe          B.W      EXTI_ClearITPendingBit
;;;223    }
;;;224    
                          ENDP

000012  0000              DCW      0x0000
                  |L13.20|
                          DCD      0x0002c39a

                          AREA ||i.EXTI15_10_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI15_10_IRQHandler PROC
;;;617    *******************************************************************************/
;;;618    void EXTI15_10_IRQHandler(void)
000000  4770              BX       lr
;;;619    {
;;;620    }
;;;621    
                          ENDP


                          AREA ||i.EXTI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI1_IRQHandler PROC
;;;231    *******************************************************************************/
;;;232    void EXTI1_IRQHandler(void)
000000  4770              BX       lr
;;;233    {
;;;234    }
;;;235    
                          ENDP


                          AREA ||i.EXTI2_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI2_IRQHandler PROC
;;;242    *******************************************************************************/
;;;243    void EXTI2_IRQHandler(void)
000000  4770              BX       lr
;;;244    {
;;;245    }
;;;246    
                          ENDP


                          AREA ||i.EXTI3_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI3_IRQHandler PROC
;;;253    *******************************************************************************/
;;;254    void EXTI3_IRQHandler(void)
000000  4770              BX       lr
;;;255    {
;;;256    }
;;;257    
                          ENDP


                          AREA ||i.EXTI4_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI4_IRQHandler PROC
;;;264    *******************************************************************************/
;;;265    void EXTI4_IRQHandler(void)
000000  4770              BX       lr
;;;266    {
;;;267    }
;;;268    
                          ENDP


                          AREA ||i.EXTI9_5_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI9_5_IRQHandler PROC
;;;409    *******************************************************************************/
;;;410    void EXTI9_5_IRQHandler(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;411    {
;;;412      NVIC_InitTypeDef NVIC_InitStructure;
;;;413      
;;;414      if(EXTI_GetITStatus(EXTI_Line9) != RESET)
000002  f44f7600          MOV      r6,#0x200
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       EXTI_GetITStatus
00000c  2800              CMP      r0,#0
00000e  d021              BEQ      |L19.84|
;;;415      {
;;;416        PreemptionPriorityValue = !PreemptionPriorityValue;
000010  4d11              LDR      r5,|L19.88|
000012  2401              MOVS     r4,#1
000014  7829              LDRB     r1,[r5,#0]  ; PreemptionPriorityValue
000016  4620              MOV      r0,r4
000018  b101              CBZ      r1,|L19.28|
00001a  2000              MOVS     r0,#0
                  |L19.28|
00001c  7028              STRB     r0,[r5,#0]
;;;417        PreemptionOccured = FALSE;
00001e  490f              LDR      r1,|L19.92|
000020  2000              MOVS     r0,#0
000022  7008              STRB     r0,[r1,#0]
;;;418    
;;;419        /* Modify the EXTI0 Interrupt Preemption Priority */
;;;420        NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQChannel;
000024  2106              MOVS     r1,#6
000026  f88d1000          STRB     r1,[sp,#0]
;;;421        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = PreemptionPriorityValue;
00002a  7829              LDRB     r1,[r5,#0]  ; PreemptionPriorityValue
00002c  f88d1001          STRB     r1,[sp,#1]
;;;422        NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000030  f88d0002          STRB     r0,[sp,#2]
;;;423        NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000034  f88d4003          STRB     r4,[sp,#3]
;;;424        NVIC_Init(&NVIC_InitStructure);
000038  4668              MOV      r0,sp
00003a  f7fffffe          BL       NVIC_Init
;;;425        
;;;426        /* Configure the SysTick Handler Priority: Preemption priority and subpriority */
;;;427        NVIC_SystemHandlerPriorityConfig(SystemHandler_SysTick, !PreemptionPriorityValue, 0);
00003e  7828              LDRB     r0,[r5,#0]  ; PreemptionPriorityValue
000040  b100              CBZ      r0,|L19.68|
000042  2400              MOVS     r4,#0
                  |L19.68|
000044  4621              MOV      r1,r4
000046  2200              MOVS     r2,#0
000048  4805              LDR      r0,|L19.96|
00004a  f7fffffe          BL       NVIC_SystemHandlerPriorityConfig
;;;428    
;;;429        EXTI_ClearITPendingBit(EXTI_Line9);
00004e  4630              MOV      r0,r6
000050  f7fffffe          BL       EXTI_ClearITPendingBit
                  |L19.84|
;;;430      }
;;;431    }
000054  bdf8              POP      {r3-r7,pc}
;;;432    
                          ENDP

000056  0000              DCW      0x0000
                  |L19.88|
                          DCD      PreemptionPriorityValue
                  |L19.92|
                          DCD      PreemptionOccured
                  |L19.96|
                          DCD      0x0002c39a

                          AREA ||i.FLASH_IRQHandler||, CODE, READONLY, ALIGN=1

                  FLASH_IRQHandler PROC
;;;193    *******************************************************************************/
;;;194    void FLASH_IRQHandler(void)
000000  4770              BX       lr
;;;195    {
;;;196    }
;;;197    
                          ENDP


                          AREA ||i.HardFaultException||, CODE, READONLY, ALIGN=1

                  HardFaultException PROC
;;;56     *******************************************************************************/
;;;57     void HardFaultException(void)
000000  4770              BX       lr
;;;58     {
;;;59     }
;;;60     
                          ENDP


                          AREA ||i.I2C1_ER_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2C1_ER_IRQHandler PROC
;;;529    *******************************************************************************/
;;;530    void I2C1_ER_IRQHandler(void)
000000  4770              BX       lr
;;;531    {
;;;532    }
;;;533    
                          ENDP


                          AREA ||i.I2C1_EV_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2C1_EV_IRQHandler PROC
;;;518    *******************************************************************************/
;;;519    void I2C1_EV_IRQHandler(void)
000000  4770              BX       lr
;;;520    {
;;;521    }
;;;522    
                          ENDP


                          AREA ||i.I2C2_ER_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2C2_ER_IRQHandler PROC
;;;551    *******************************************************************************/
;;;552    void I2C2_ER_IRQHandler(void)
000000  4770              BX       lr
;;;553    {
;;;554    }
;;;555    
                          ENDP


                          AREA ||i.I2C2_EV_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2C2_EV_IRQHandler PROC
;;;540    *******************************************************************************/
;;;541    void I2C2_EV_IRQHandler(void)
000000  4770              BX       lr
;;;542    {
;;;543    }
;;;544    
                          ENDP


                          AREA ||i.MemManageException||, CODE, READONLY, ALIGN=1

                  MemManageException PROC
;;;67     *******************************************************************************/
;;;68     void MemManageException(void)
000000  4770              BX       lr
;;;69     {
;;;70     }
;;;71     
                          ENDP


                          AREA ||i.NMIException||, CODE, READONLY, ALIGN=1

                  NMIException PROC
;;;45     *******************************************************************************/
;;;46     void NMIException(void)
000000  4770              BX       lr
;;;47     {
;;;48     }
;;;49     
                          ENDP


                          AREA ||i.PVD_IRQHandler||, CODE, READONLY, ALIGN=1

                  PVD_IRQHandler PROC
;;;160    *******************************************************************************/
;;;161    void PVD_IRQHandler(void)
000000  4770              BX       lr
;;;162    {
;;;163    }
;;;164    
                          ENDP


                          AREA ||i.PendSVC||, CODE, READONLY, ALIGN=1

                  PendSVC PROC
;;;122    *******************************************************************************/
;;;123    void PendSVC(void)
000000  4770              BX       lr
;;;124    {
;;;125    }
;;;126    
                          ENDP


                          AREA ||i.RCC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RCC_IRQHandler PROC
;;;204    *******************************************************************************/
;;;205    void RCC_IRQHandler(void)
000000  4770              BX       lr
;;;206    {
;;;207    }
;;;208    
                          ENDP


                          AREA ||i.RTCAlarm_IRQHandler||, CODE, READONLY, ALIGN=1

                  RTCAlarm_IRQHandler PROC
;;;628    *******************************************************************************/
;;;629    void RTCAlarm_IRQHandler(void)
000000  4770              BX       lr
;;;630    {
;;;631    }
;;;632    
                          ENDP


                          AREA ||i.RTC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RTC_IRQHandler PROC
;;;182    *******************************************************************************/
;;;183    void RTC_IRQHandler(void)
000000  4770              BX       lr
;;;184    {
;;;185    }
;;;186    
                          ENDP


                          AREA ||i.SPI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_IRQHandler PROC
;;;562    *******************************************************************************/
;;;563    void SPI1_IRQHandler(void)
000000  4770              BX       lr
;;;564    {
;;;565    }
;;;566    
                          ENDP


                          AREA ||i.SPI2_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI2_IRQHandler PROC
;;;573    *******************************************************************************/
;;;574    void SPI2_IRQHandler(void)
000000  4770              BX       lr
;;;575    {
;;;576    }
;;;577    
                          ENDP


                          AREA ||i.SVCHandler||, CODE, READONLY, ALIGN=1

                  SVCHandler PROC
;;;111    *******************************************************************************/
;;;112    void SVCHandler(void)
000000  4770              BX       lr
;;;113    {
;;;114    }
;;;115    
                          ENDP


                          AREA ||i.SysTickHandler||, CODE, READONLY, ALIGN=2

                  SysTickHandler PROC
;;;133    *******************************************************************************/
;;;134    void SysTickHandler(void)
000000  b510              PUSH     {r4,lr}
;;;135    {
;;;136      /* If the EXTI0 IRQ Handler was preempted by SysTick Handler */
;;;137      if(NVIC_GetIRQChannelActiveBitStatus(EXTI0_IRQChannel) != RESET)
000002  2006              MOVS     r0,#6
000004  f7fffffe          BL       NVIC_GetIRQChannelActiveBitStatus
000008  2800              CMP      r0,#0
00000a  d002              BEQ      |L36.18|
;;;138      {
;;;139        PreemptionOccured = TRUE;
00000c  4901              LDR      r1,|L36.20|
00000e  2001              MOVS     r0,#1
000010  7008              STRB     r0,[r1,#0]
                  |L36.18|
;;;140      }
;;;141    }
000012  bd10              POP      {r4,pc}
;;;142    
                          ENDP

                  |L36.20|
                          DCD      PreemptionOccured

                          AREA ||i.TAMPER_IRQHandler||, CODE, READONLY, ALIGN=1

                  TAMPER_IRQHandler PROC
;;;171    *******************************************************************************/
;;;172    void TAMPER_IRQHandler(void)
000000  4770              BX       lr
;;;173    {
;;;174    }
;;;175    
                          ENDP


                          AREA ||i.TIM1_BRK_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM1_BRK_IRQHandler PROC
;;;439    *******************************************************************************/
;;;440    void TIM1_BRK_IRQHandler(void)
000000  4770              BX       lr
;;;441    {
;;;442    }
;;;443    
                          ENDP


                          AREA ||i.TIM1_CC_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM1_CC_IRQHandler PROC
;;;474    *******************************************************************************/
;;;475    void TIM1_CC_IRQHandler(void)
000000  4770              BX       lr
;;;476    {
;;;477    }
;;;478    
                          ENDP


                          AREA ||i.TIM1_TRG_COM_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM1_TRG_COM_IRQHandler PROC
;;;463    *******************************************************************************/
;;;464    void TIM1_TRG_COM_IRQHandler(void)
000000  4770              BX       lr
;;;465    {
;;;466    }
;;;467    
                          ENDP


                          AREA ||i.TIM1_UP_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM1_UP_IRQHandler PROC
;;;451    *******************************************************************************/
;;;452    void TIM1_UP_IRQHandler(void)
000000  4770              BX       lr
;;;453    {
;;;454    }
;;;455    
                          ENDP


                          AREA ||i.TIM2_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM2_IRQHandler PROC
;;;485    *******************************************************************************/
;;;486    void TIM2_IRQHandler(void)
000000  4770              BX       lr
;;;487    {
;;;488    }
;;;489    
                          ENDP


                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM3_IRQHandler PROC
;;;496    *******************************************************************************/
;;;497    void TIM3_IRQHandler(void)
000000  4770              BX       lr
;;;498    {
;;;499    }
;;;500    
                          ENDP


                          AREA ||i.TIM4_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIM4_IRQHandler PROC
;;;507    *******************************************************************************/
;;;508    void TIM4_IRQHandler(void)
000000  4770              BX       lr
;;;509    {
;;;510    }
;;;511    
                          ENDP


                          AREA ||i.USART1_IRQHandler||, CODE, READONLY, ALIGN=1

                  USART1_IRQHandler PROC
;;;584    *******************************************************************************/
;;;585    void USART1_IRQHandler(void)
000000  4770              BX       lr
;;;586    {
;;;587    }
;;;588    
                          ENDP


                          AREA ||i.USART2_IRQHandler||, CODE, READONLY, ALIGN=1

                  USART2_IRQHandler PROC
;;;595    *******************************************************************************/
;;;596    void USART2_IRQHandler(void)
000000  4770              BX       lr
;;;597    {
;;;598    }
;;;599    
                          ENDP


                          AREA ||i.USART3_IRQHandler||, CODE, READONLY, ALIGN=1

                  USART3_IRQHandler PROC
;;;606    *******************************************************************************/
;;;607    void USART3_IRQHandler(void)
000000  4770              BX       lr
;;;608    {
;;;609    }
;;;610    
                          ENDP


                          AREA ||i.USBWakeUp_IRQHandler||, CODE, READONLY, ALIGN=1

                  USBWakeUp_IRQHandler PROC
;;;639    *******************************************************************************/
;;;640    void USBWakeUp_IRQHandler(void)
000000  4770              BX       lr
;;;641    {
;;;642    }
;;;643    
                          ENDP


                          AREA ||i.USB_HP_CAN_TX_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_HP_CAN_TX_IRQHandler PROC
;;;364    *******************************************************************************/
;;;365    void USB_HP_CAN_TX_IRQHandler(void)
000000  4770              BX       lr
;;;366    {
;;;367    }
;;;368    
                          ENDP


                          AREA ||i.USB_LP_CAN_RX0_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_LP_CAN_RX0_IRQHandler PROC
;;;376    *******************************************************************************/
;;;377    void USB_LP_CAN_RX0_IRQHandler(void)
000000  4770              BX       lr
;;;378    {
;;;379    }
;;;380    
                          ENDP


                          AREA ||i.UsageFaultException||, CODE, READONLY, ALIGN=1

                  UsageFaultException PROC
;;;89     *******************************************************************************/
;;;90     void UsageFaultException(void)
000000  4770              BX       lr
;;;91     {
;;;92     }
;;;93     
                          ENDP


                          AREA ||i.WWDG_IRQHandler||, CODE, READONLY, ALIGN=1

                  WWDG_IRQHandler PROC
;;;149    *******************************************************************************/
;;;150    void WWDG_IRQHandler(void)
000000  4770              BX       lr
;;;151    {
;;;152    }
;;;153    
                          ENDP

