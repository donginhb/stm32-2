###############################################################################
#                                                                             #
#                                                       04/May/2014  15:25:59 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\完成设计的产品\K60资料\OLED资料                       #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\src\drivers\OLED\Oled_ #
#                    Printf.c                                                 #
#    Command line =  "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\src\drivers\OLED\Oled_ #
#                    Printf.c" -D IAR -D TWR_K60N512 -lCN                     #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    FLASH_512KB_PFLASH\List\" -lB                            #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    FLASH_512KB_PFLASH\List\" -o                             #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    FLASH_512KB_PFLASH\Obj\" --no_cse --no_unroll            #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.0                           #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\projects\hello_world\" -I                   #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\common\" -I "E:\完成设计的产品\K60资料\OLED #
#                    资料 (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_w #
#                    orld\..\..\..\src\cpu\" -I "E:\完成设计的产品\K60资料\OL #
#                    ED资料 (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello #
#                    _world\..\..\..\src\cpu\headers\" -I                     #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\adc16\" -I                          #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\enet\" -I                           #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\pmc\" -I                            #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\rtc\" -I                            #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\lptmr\" -I                          #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\uart\" -I                           #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\mcg\" -I                            #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\wdog\" -I                           #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\platforms\" -I                              #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\ftm\" -I                            #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\SPI\" -I                            #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\..\..\src\drivers\OLED\" -I                           #
#                    "E:\完成设计的产品\K60资料\OLED资料                      #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    ..\" -Ol --use_c++_inline                                #
#    List file    =  E:\完成设计的产品\K60资料\OLED资料                       #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    FLASH_512KB_PFLASH\List\Oled_Printf.lst                  #
#    Object file  =  E:\完成设计的产品\K60资料\OLED资料                       #
#                    (1)\OLED资料\KinetisK60_Demo_OLED\build\iar\hello_world\ #
#                    FLASH_512KB_PFLASH\Obj\Oled_Printf.o                     #
#                                                                             #
#                                                                             #
###############################################################################

E:\完成设计的产品\K60资料\OLED资料 (1)\OLED资料\KinetisK60_Demo_OLED\src\drivers\OLED\Oled_Printf.c
      1          /******************************************************************************
      2           * File Name   :  oledPrint.c
      3           * Author      :  43oh - - MSP430 News Projects and Forums.
      4           *             :  Modified version of printf provided by:
      5           *             :  oPossum[ http://www.43oh.com/forum/viewtopic.php?f=10&t=1732]
      6           * Description :  printf extension for the SSD1306 OLED
      7           * Date        :  October 21, 2011.
      8           *****************************************************************************/
      9          #include "stdarg.h"
     10          #include "stdio.h"
     11          #include "Oled_Config.h"
     12          #include "Oled_SSD1306.h"
     13          #include "Oled_Printf.h"
     14          
     15          
     16          
     17          
     18          static 	char column = 0;

   \                                 In section .bss, align 1
     19          static 	char row = 0;
   \                     row:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     20          static	char columnIncrementSmallFont = 0;
   \                     columnIncrementSmallFont:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     21          static	char columnIncrementLargeFont = 0;
   \                     columnIncrementLargeFont:
   \   00000000                      DS8 1
     22          static	enum e_columnIncrementFlag 

   \                                 In section .bss, align 1
     23          					columnIncrementFlag		 = NO_FONT;
   \                     columnIncrementFlag:
   \   00000000                      DS8 1
     24          

   \                                 In section .text, align 2, keep-with-next
     25          void putc(unsigned char character)
     26          {
   \                     putc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
     27             if (columnIncrementFlag == SMALL_FONT)
   \   00000006   0x....             LDR.N    R0,??DataTable3
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD10D             BNE.N    ??putc_0
     28             {
     29             	Fill_RAM_FONT_SMALL(character-32,columnIncrementSmallFont,row);
   \   0000000E   0x....             LDR.N    R0,??DataTable3_1
   \   00000010   0x7802             LDRB     R2,[R0, #+0]
   \   00000012   0x....             LDR.N    R0,??DataTable3_2
   \   00000014   0x7801             LDRB     R1,[R0, #+0]
   \   00000016   0xF1B4 0x0020      SUBS     R0,R4,#+32
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0x.... 0x....      BL       Fill_RAM_FONT_SMALL
     30             	columnIncrementSmallFont = columnIncrementSmallFont+SMALL_FONT_WIDTH;
   \   00000020   0x....             LDR.N    R0,??DataTable3_2
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x1D40             ADDS     R0,R0,#+5
   \   00000026   0x....             LDR.N    R1,??DataTable3_2
   \   00000028   0x7008             STRB     R0,[R1, #+0]
     31             }
     32          
     33             if (columnIncrementFlag == LARGE_FONT)
   \                     ??putc_0:
   \   0000002A   0x....             LDR.N    R0,??DataTable3
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD10F             BNE.N    ??putc_1
     34             {
     35             	Fill_RAM_FONT(character,columnIncrementLargeFont,row,LARGE_FONT_SPAN,LARGE_FONT_WIDTH);
   \   00000032   0x200E             MOVS     R0,#+14
   \   00000034   0x9000             STR      R0,[SP, #+0]
   \   00000036   0x2302             MOVS     R3,#+2
   \   00000038   0x....             LDR.N    R0,??DataTable3_1
   \   0000003A   0x7802             LDRB     R2,[R0, #+0]
   \   0000003C   0x....             LDR.N    R0,??DataTable3_3
   \   0000003E   0x7801             LDRB     R1,[R0, #+0]
   \   00000040   0x0020             MOVS     R0,R4
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x.... 0x....      BL       Fill_RAM_FONT
     36             	columnIncrementLargeFont = columnIncrementLargeFont+LARGE_FONT_WIDTH;
   \   00000048   0x....             LDR.N    R0,??DataTable3_3
   \   0000004A   0x7800             LDRB     R0,[R0, #+0]
   \   0000004C   0x300E             ADDS     R0,R0,#+14
   \   0000004E   0x....             LDR.N    R1,??DataTable3_3
   \   00000050   0x7008             STRB     R0,[R1, #+0]
     37             }   	
     38          }
   \                     ??putc_1:
   \   00000052   0xBD13             POP      {R0,R1,R4,PC}    ;; return
     39          
     40          
     41          /*
     42          
     43          void puts(char *s)
     44          {
     45            while(*s) 
     46            {
     47              if (columnIncrementFlag == SMALL_FONT)
     48              {
     49                Fill_RAM_FONT_SMALL(*s-32,columnIncrementSmallFont,row);
     50                columnIncrementSmallFont = columnIncrementSmallFont+SMALL_FONT_WIDTH;
     51              }
     52          
     53              if (columnIncrementFlag == LARGE_FONT)
     54              {
     55                Fill_RAM_FONT(*s,columnIncrementLargeFont,row,LARGE_FONT_SPAN,LARGE_FONT_WIDTH);
     56                columnIncrementLargeFont = columnIncrementLargeFont+LARGE_FONT_WIDTH;
     57              }   
     58              *s++;
     59            }
     60          }
     61          
     62          
     63          */
     64          /****************************************************************************
     65          
     66          
     67          char setColumn, 选择开始的列
     68          
     69          char setRow,   选择开始显示的行
     70          
     71          char IncrementFlag  选择字符
     72          
     73          
     74          
     75          ***************************************************************************/
     76          
     77          

   \                                 In section .text, align 2, keep-with-next
     78          void OLED_PrintfSetColumnRow(char setColumn, char setRow, char IncrementFlag)
     79          {
     80          	row = setRow;
   \                     OLED_PrintfSetColumnRow:
   \   00000000   0x....             LDR.N    R3,??DataTable3_1
   \   00000002   0x7019             STRB     R1,[R3, #+0]
     81          	columnIncrementFlag = (enum e_columnIncrementFlag)IncrementFlag;
   \   00000004   0x....             LDR.N    R1,??DataTable3
   \   00000006   0x700A             STRB     R2,[R1, #+0]
     82          	
     83          	if (columnIncrementFlag == SMALL_FONT)
   \   00000008   0x....             LDR.N    R1,??DataTable3
   \   0000000A   0x7809             LDRB     R1,[R1, #+0]
   \   0000000C   0x2901             CMP      R1,#+1
   \   0000000E   0xD101             BNE.N    ??OLED_PrintfSetColumnRow_0
     84          		columnIncrementSmallFont = setColumn;
   \   00000010   0x....             LDR.N    R1,??DataTable3_2
   \   00000012   0x7008             STRB     R0,[R1, #+0]
     85          	
     86          	if (columnIncrementFlag == LARGE_FONT)
   \                     ??OLED_PrintfSetColumnRow_0:
   \   00000014   0x....             LDR.N    R1,??DataTable3
   \   00000016   0x7809             LDRB     R1,[R1, #+0]
   \   00000018   0x2902             CMP      R1,#+2
   \   0000001A   0xD101             BNE.N    ??OLED_PrintfSetColumnRow_1
     87          		columnIncrementLargeFont = setColumn;  
   \   0000001C   0x....             LDR.N    R1,??DataTable3_3
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
     88          }
   \                     ??OLED_PrintfSetColumnRow_1:
   \   00000020   0x4770             BX       LR               ;; return
     89          

   \                                 In section .rodata, align 4
     90          static const unsigned long dv[] = {
   \                     dv:
   \   00000000   0x3B9ACA00         DC32 1000000000, 100000000, 10000000, 1000000, 100000, 10000, 1000, 100
   \              0x05F5E100   
   \              0x00989680   
   \              0x000F4240   
   \              0x000186A0   
   \              0x00002710   
   \              0x000003E8   
   \              0x00000064   
   \   00000020   0x0000000A         DC32 10, 1
   \              0x00000001   
     91          //  4294967296      // 32 bit unsigned max
     92              1000000000,     // +0
     93               100000000,     // +1
     94                10000000,     // +2
     95                 1000000,     // +3
     96                  100000,     // +4
     97          //       65535      // 16 bit unsigned max     
     98                   10000,     // +5
     99                    1000,     // +6
    100                     100,     // +7
    101                      10,     // +8
    102                       1,     // +9
    103          };
    104          

   \                                 In section .text, align 2, keep-with-next
    105          static void xtoa(unsigned long x, const unsigned long *dp)
    106          {
   \                     xtoa:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    107              char c;
    108              unsigned long d;
    109              if(x) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD104             BNE.N    ??xtoa_0
    110                  while(x < *dp) ++dp;
    111                  do {
    112                      d = *dp++;
    113                      c = '0';
    114                      while(x >= d) ++c, x -= d;
    115                      putc(c);
    116                  } while(!(d & 1));
    117              } else
    118                  putc('0');
   \   0000000A   0x2030             MOVS     R0,#+48
   \   0000000C   0x.... 0x....      BL       putc
    119          }
   \                     ??xtoa_1:
   \   00000010   0xBD70             POP      {R4-R6,PC}       ;; return
   \                     ??xtoa_2:
   \   00000012   0x1D2D             ADDS     R5,R5,#+4
   \                     ??xtoa_0:
   \   00000014   0x6828             LDR      R0,[R5, #+0]
   \   00000016   0x4284             CMP      R4,R0
   \   00000018   0xD3FB             BCC.N    ??xtoa_2
   \                     ??xtoa_3:
   \   0000001A   0x682E             LDR      R6,[R5, #+0]
   \   0000001C   0x1D2D             ADDS     R5,R5,#+4
   \   0000001E   0x2030             MOVS     R0,#+48
   \   00000020   0xE001             B.N      ??xtoa_4
   \                     ??xtoa_5:
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x1BA4             SUBS     R4,R4,R6
   \                     ??xtoa_4:
   \   00000026   0x42B4             CMP      R4,R6
   \   00000028   0xD2FB             BCS.N    ??xtoa_5
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       putc
   \   00000030   0x07F0             LSLS     R0,R6,#+31
   \   00000032   0xD4ED             BMI.N    ??xtoa_1
   \   00000034   0xE7F1             B.N      ??xtoa_3
    120          

   \                                 In section .text, align 2, keep-with-next
    121          static void puth(unsigned n)
    122          {
   \                     puth:
   \   00000000   0xB580             PUSH     {R7,LR}
    123              static const char hex[16] = { '0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
    124              putc(hex[n & 15]);
   \   00000002   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   00000006   0x....             LDR.N    R1,??DataTable3_4
   \   00000008   0x5C40             LDRB     R0,[R0, R1]
   \   0000000A   0x.... 0x....      BL       putc
    125          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .rodata, align 4
   \                     ??hex:
   \   00000000   0x30 0x31          DC8 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70
   \              0x32 0x33    
   \              0x34 0x35    
   \              0x36 0x37    
   \              0x38 0x39    
   \              0x41 0x42    
   \              0x43 0x44    
   \              0x45 0x46    
    126          

   \                                 In section .text, align 2, keep-with-next
    127          void OLED_Printf(char *format, ...)
    128          {
   \                     OLED_Printf:
   \   00000000   0xB40E             PUSH     {R1-R3}
   \   00000002   0xB578             PUSH     {R3-R6,LR}
   \   00000004   0x0004             MOVS     R4,R0
    129              char c;
    130              int i;
    131              long n;
    132              
    133              va_list a;
    134              va_start(a, format);
   \   00000006   0xAE05             ADD      R6,SP,#+20
   \   00000008   0xE002             B.N      ??OLED_Printf_0
    135              while(c = *format++) {
    136                  if(c == '%') {
    137                      switch(c = *format++) {
    138                          case 's':                       // String
    139                              puts(va_arg(a, char*));
    140                              break;
    141                          case 'c':                       // Char
    142                              putc(va_arg(a, char));
    143                              break;
    144                          case 'i':                       // 16 bit Integer
    145                          case 'd':                       // 16 bit Integer
    146                          case 'u':                       // 16 bit Unsigned
    147                              i = va_arg(a, int);
    148                              if(c == 'i' && i < 0) i = -i, putc('-');
    149                              xtoa((unsigned)i, dv + 5);
    150                              break;
    151                          case 'l':                       // 32 bit Long
    152                          case 'n':                       // 32 bit uNsigned loNg
    153                              n = va_arg(a, long);
    154                              if(c == 'l' &&  n < 0) n = -n, putc('-');
    155                              xtoa((unsigned long)n, dv);
    156                              break;
    157                          case 'x':                       // 16 bit heXadecimal
    158                              i = va_arg(a, int);
    159                              puth(i >> 12);
    160                              puth(i >> 8);
    161                              puth(i >> 4);
    162                              puth(i);
    163                              break;
    164                          case 0: return;
    165                          default: goto bad_fmt;
    166                      }
    167                  } else
    168                  {
    169          				bad_fmt:    putc(c);
   \                     ??OLED_Printf_1:
   \                     ??OLED_Printf_2:
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       putc
    170          		                
    171                  }
   \                     ??OLED_Printf_0:
   \   00000010   0x7820             LDRB     R0,[R4, #+0]
   \   00000012   0x1C64             ADDS     R4,R4,#+1
   \   00000014   0x0001             MOVS     R1,R0
   \   00000016   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000018   0x2900             CMP      R1,#+0
   \   0000001A   0xD055             BEQ.N    ??OLED_Printf_3
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x2825             CMP      R0,#+37
   \   00000020   0xD1F3             BNE.N    ??OLED_Printf_2
   \   00000022   0x7820             LDRB     R0,[R4, #+0]
   \   00000024   0x1C64             ADDS     R4,R4,#+1
   \   00000026   0x0001             MOVS     R1,R0
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x2900             CMP      R1,#+0
   \   0000002C   0xD04B             BEQ.N    ??OLED_Printf_4
   \   0000002E   0x2963             CMP      R1,#+99
   \   00000030   0xD014             BEQ.N    ??OLED_Printf_5
   \   00000032   0x2964             CMP      R1,#+100
   \   00000034   0xD018             BEQ.N    ??OLED_Printf_6
   \   00000036   0x2969             CMP      R1,#+105
   \   00000038   0xD016             BEQ.N    ??OLED_Printf_6
   \   0000003A   0x296C             CMP      R1,#+108
   \   0000003C   0xD024             BEQ.N    ??OLED_Printf_7
   \   0000003E   0x296E             CMP      R1,#+110
   \   00000040   0xD022             BEQ.N    ??OLED_Printf_7
   \   00000042   0x2973             CMP      R1,#+115
   \   00000044   0xD004             BEQ.N    ??OLED_Printf_8
   \   00000046   0x2975             CMP      R1,#+117
   \   00000048   0xD00E             BEQ.N    ??OLED_Printf_6
   \   0000004A   0x2978             CMP      R1,#+120
   \   0000004C   0xD02C             BEQ.N    ??OLED_Printf_9
   \   0000004E   0xE7DC             B.N      ??OLED_Printf_1
   \                     ??OLED_Printf_8:
   \   00000050   0x0030             MOVS     R0,R6
   \   00000052   0x1D06             ADDS     R6,R0,#+4
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x.... 0x....      BL       puts
   \   0000005A   0xE7D9             B.N      ??OLED_Printf_0
   \                     ??OLED_Printf_5:
   \   0000005C   0x1D36             ADDS     R6,R6,#+4
   \   0000005E   0xF816 0x0C04      LDRB     R0,[R6, #-4]
   \   00000062   0x.... 0x....      BL       putc
   \   00000066   0xE7D3             B.N      ??OLED_Printf_0
   \                     ??OLED_Printf_6:
   \   00000068   0x6835             LDR      R5,[R6, #+0]
   \   0000006A   0x1D36             ADDS     R6,R6,#+4
   \   0000006C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006E   0x2869             CMP      R0,#+105
   \   00000070   0xD105             BNE.N    ??OLED_Printf_10
   \   00000072   0x2D00             CMP      R5,#+0
   \   00000074   0xD503             BPL.N    ??OLED_Printf_10
   \   00000076   0x426D             RSBS     R5,R5,#+0
   \   00000078   0x202D             MOVS     R0,#+45
   \   0000007A   0x.... 0x....      BL       putc
   \                     ??OLED_Printf_10:
   \   0000007E   0x....             LDR.N    R1,??DataTable3_5
   \   00000080   0x0028             MOVS     R0,R5
   \   00000082   0x.... 0x....      BL       xtoa
   \   00000086   0xE7C3             B.N      ??OLED_Printf_0
   \                     ??OLED_Printf_7:
   \   00000088   0x6835             LDR      R5,[R6, #+0]
   \   0000008A   0x1D36             ADDS     R6,R6,#+4
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x286C             CMP      R0,#+108
   \   00000090   0xD105             BNE.N    ??OLED_Printf_11
   \   00000092   0x2D00             CMP      R5,#+0
   \   00000094   0xD503             BPL.N    ??OLED_Printf_11
   \   00000096   0x426D             RSBS     R5,R5,#+0
   \   00000098   0x202D             MOVS     R0,#+45
   \   0000009A   0x.... 0x....      BL       putc
   \                     ??OLED_Printf_11:
   \   0000009E   0x....             LDR.N    R1,??DataTable3_6
   \   000000A0   0x0028             MOVS     R0,R5
   \   000000A2   0x.... 0x....      BL       xtoa
   \   000000A6   0xE7B3             B.N      ??OLED_Printf_0
   \                     ??OLED_Printf_9:
   \   000000A8   0x6835             LDR      R5,[R6, #+0]
   \   000000AA   0x1D36             ADDS     R6,R6,#+4
   \   000000AC   0x1328             ASRS     R0,R5,#+12
   \   000000AE   0x.... 0x....      BL       puth
   \   000000B2   0x1228             ASRS     R0,R5,#+8
   \   000000B4   0x.... 0x....      BL       puth
   \   000000B8   0x1128             ASRS     R0,R5,#+4
   \   000000BA   0x.... 0x....      BL       puth
   \   000000BE   0x0028             MOVS     R0,R5
   \   000000C0   0x.... 0x....      BL       puth
   \   000000C4   0xE7A4             B.N      ??OLED_Printf_0
   \                     ??OLED_Printf_4:
   \   000000C6   0xE7FF             B.N      ??OLED_Printf_12
    172              }
    173              va_end(a);
    174          }
   \                     ??OLED_Printf_3:
   \                     ??OLED_Printf_12:
   \   000000C8   0xBC71             POP      {R0,R4-R6}
   \   000000CA   0xF85D 0xFB10      LDR      PC,[SP], #+16    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     columnIncrementFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     row

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     columnIncrementSmallFont

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     columnIncrementLargeFont

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     ??hex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     dv+0x14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     dv

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       32  OLED_Printf
             32 -> putc
             32 -> puth
             32 -> puts
             32 -> xtoa
        0  OLED_PrintfSetColumnRow
       16  putc
             16 -> Fill_RAM_FONT
             16 -> Fill_RAM_FONT_SMALL
        8  puth
              8 -> putc
       16  xtoa
             16 -> putc


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
     206  OLED_Printf
      34  OLED_PrintfSetColumnRow
       1  columnIncrementFlag
       1  columnIncrementLargeFont
       1  columnIncrementSmallFont
      40  dv
      16  hex
      84  putc
      16  puth
       1  row
      54  xtoa

 
   4 bytes in section .bss
  56 bytes in section .rodata
 422 bytes in section .text
 
 422 bytes of CODE  memory
  56 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: 1
