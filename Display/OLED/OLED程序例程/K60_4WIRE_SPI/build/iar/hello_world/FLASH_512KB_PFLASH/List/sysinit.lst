###############################################################################
#                                                                             #
#                                                       26/Jun/2014  09:42:05 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_4WI #
#                    RE_SPI\src\cpu\sysinit.c                                 #
#    Command line =  C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_4WI #
#                    RE_SPI\src\cpu\sysinit.c -D IAR -D TWR_K60N512 -lCN      #
#                    C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_4WI #
#                    RE_SPI\build\iar\hello_world\FLASH_512KB_PFLASH\List\    #
#                    -lB C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60 #
#                    _4WIRE_SPI\build\iar\hello_world\FLASH_512KB_PFLASH\List #
#                    \ -o C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K6 #
#                    0_4WIRE_SPI\build\iar\hello_world\FLASH_512KB_PFLASH\Obj #
#                    \ --no_cse --no_unroll --no_inline --no_code_motion      #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.0                           #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_4WI #
#                    RE_SPI\build\iar\hello_world\..\..\..\src\projects\hello #
#                    _world\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀ #
#                    ý³Ì\K60_4WIRE_SPI\build\iar\hello_world\..\..\..\src\com #
#                    mon\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì #
#                    \K60_4WIRE_SPI\build\iar\hello_world\..\..\..\src\cpu\   #
#                    -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_ #
#                    4WIRE_SPI\build\iar\hello_world\..\..\..\src\cpu\headers #
#                    \ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K6 #
#                    0_4WIRE_SPI\build\iar\hello_world\..\..\..\src\drivers\a #
#                    dc16\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³ #
#                    Ì\K60_4WIRE_SPI\build\iar\hello_world\..\..\..\src\drive #
#                    rs\enet\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐò #
#                    Àý³Ì\K60_4WIRE_SPI\build\iar\hello_world\..\..\..\src\dr #
#                    ivers\pmc\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³Ì #
#                    ÐòÀý³Ì\K60_4WIRE_SPI\build\iar\hello_world\..\..\..\src\ #
#                    drivers\rtc\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\ #
#                    ³ÌÐòÀý³Ì\K60_4WIRE_SPI\build\iar\hello_world\..\..\..\sr #
#                    c\drivers\lptmr\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140 #
#                    509\³ÌÐòÀý³Ì\K60_4WIRE_SPI\build\iar\hello_world\..\..\. #
#                    .\src\drivers\uart\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ- #
#                    140509\³ÌÐòÀý³Ì\K60_4WIRE_SPI\build\iar\hello_world\..\. #
#                    .\..\src\drivers\mcg\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁ #
#                    Ï-140509\³ÌÐòÀý³Ì\K60_4WIRE_SPI\build\iar\hello_world\.. #
#                    \..\..\src\drivers\wdog\ -I                              #
#                    C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_4WI #
#                    RE_SPI\build\iar\hello_world\..\..\..\src\platforms\ -I  #
#                    C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_4WI #
#                    RE_SPI\build\iar\hello_world\..\..\..\src\drivers\ftm\   #
#                    -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_ #
#                    4WIRE_SPI\build\iar\hello_world\..\..\..\src\drivers\SPI #
#                    \ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K6 #
#                    0_4WIRE_SPI\build\iar\hello_world\..\..\..\src\drivers\O #
#                    LED\ -I C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì #
#                    \K60_4WIRE_SPI\build\iar\hello_world\..\ -Ol             #
#                    --use_c++_inline                                         #
#    List file    =  C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_4WI #
#                    RE_SPI\build\iar\hello_world\FLASH_512KB_PFLASH\List\sys #
#                    init.lst                                                 #
#    Object file  =  C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_4WI #
#                    RE_SPI\build\iar\hello_world\FLASH_512KB_PFLASH\Obj\sysi #
#                    nit.o                                                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\me\Desktop\OLED¿Í»§×ÊÁÏ-140509\³ÌÐòÀý³Ì\K60_4WIRE_SPI\src\cpu\sysinit.c
      1          /*
      2           * File:        sysinit.c
      3           * Purpose:     Kinetis Configuration
      4           *              Initializes processor to a default state
      5           *
      6           * Notes:
      7           *
      8           */
      9          
     10          #include "common.h"
     11          #include "sysinit.h"
     12          #include "uart.h"
     13          
     14          /********************************************************************/
     15          
     16          /* Actual system clock frequency */

   \                                 In section .bss, align 4
     17          int core_clk_khz;   //ÄÚºËÊ±ÖÓ(KHz)
   \                     core_clk_khz:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     18          int core_clk_mhz;   //ÄÚºËÊ±ÖÓ(MHz)
   \                     core_clk_mhz:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     19          int periph_clk_khz;  //ÍâÎ§×ÜÏßÊ±ÖÓ
   \                     periph_clk_khz:
   \   00000000                      DS8 4
     20          
     21          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     22          void sysinit (void)
     23          {
   \                     sysinit:
   \   00000000   0xB580             PUSH     {R7,LR}
     24                  /*
     25                   * Enable all of the port clocks. These have to be enabled to configure
     26                   * pin muxing options, so most code will need all of these on anyway.
     27                   */
     28                  /* Ê¹ÄÜËùÓÐ¶Ë¿ÚPORTÊ±ÖÓ   */
     29            
     30                  SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
     31                                | SIM_SCGC5_PORTB_MASK
     32                                | SIM_SCGC5_PORTC_MASK
     33                                | SIM_SCGC5_PORTD_MASK
     34                                | SIM_SCGC5_PORTE_MASK );
   \   00000002   0x....             LDR.N    R0,??DataTable2  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000A   0x....             LDR.N    R1,??DataTable2  ;; 0x40048038
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     35          
     36          #if defined(NO_PLL_INIT)       //Èç¹û¶¨Òå²»³õÊ¼»¯ËøÏà»·£¬Ôò½øÈë FEI mode
     37                    core_clk_mhz = 21; //FEI mode
     38          #else 
     39           	/* Ramp up the system clock */
     40          	core_clk_mhz = pll_init(CORE_CLK_MHZ, REF_CLK);
   \   0000000E   0x2103             MOVS     R1,#+3
   \   00000010   0x2002             MOVS     R0,#+2
   \   00000012   0x.... 0x....      BL       pll_init
   \   00000016   0x....             LDR.N    R1,??DataTable2_1
   \   00000018   0x6008             STR      R0,[R1, #+0]
     41          #endif
     42          
     43          	/*
     44                   * Use the value obtained from the pll_init function to define variables
     45          	 * for the core clock in kHz and also the peripheral clock. These
     46          	 * variables can be used by other functions that need awareness of the
     47          	 * system frequency.
     48          	 */
     49                  
     50                  //Í¨¹ýpll_initº¯ÊýµÄ·µ»ØÖµÀ´¼ÆËãÄÚºËÊ±ÖÓºÍÍâÉèÊ±ÖÓ£¬±ãÓÚÆäËûº¯Êý¿É²éÑ¯Ê±ÖÓÆµÂÊ
     51                  
     52          	core_clk_khz = core_clk_mhz * 1000;
   \   0000001A   0x....             LDR.N    R0,??DataTable2_1
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF44F 0x717A      MOV      R1,#+1000
   \   00000022   0x4348             MULS     R0,R1,R0
   \   00000024   0x....             LDR.N    R1,??DataTable2_2
   \   00000026   0x6008             STR      R0,[R1, #+0]
     53            	periph_clk_khz = core_clk_khz / (((SIM_CLKDIV1 & SIM_CLKDIV1_OUTDIV2_MASK) >> 24)+ 1);
   \   00000028   0x....             LDR.N    R0,??DataTable2_2
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x....             LDR.N    R1,??DataTable2_3  ;; 0x40048044
   \   0000002E   0x6809             LDR      R1,[R1, #+0]
   \   00000030   0xF3C1 0x6103      UBFX     R1,R1,#+24,#+4
   \   00000034   0x1C49             ADDS     R1,R1,#+1
   \   00000036   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000003A   0x....             LDR.N    R1,??DataTable2_4
   \   0000003C   0x6008             STR      R0,[R1, #+0]
     54          
     55            	/* For debugging purposes, enable the trace clock and/or FB_CLK so that
     56            	 * we'll be able to monitor clocks and know the PLL is at the frequency
     57            	 * that we expect.
     58            	 */
     59          	trace_clk_init();    //Ê¹ÄÜ¸ú×ÙÊ±ÖÓ£¬ÓÃÓÚµ÷ÊÔ
   \   0000003E   0x.... 0x....      BL       trace_clk_init
     60            	fb_clk_init();         //FlexBusÊ±ÖÓ³õÊ¼»¯
   \   00000042   0x.... 0x....      BL       fb_clk_init
     61          
     62            	/* Enable the pins for the selected UART */
     63                  
     64                   //³õÊ¼»¯ printf º¯ÊýËùÓÃµ½µÄ´®¿Ú
     65                  
     66                  //ÕÒµ½TERM_PORTµÄºê¶¨ÒåÎ»ÖÃ£¬¾Í¿ÉÒÔÉèÖÃ¹¤×÷´®¿Ú
     67                  
     68                   
     69                 
     70          
     71            	
     72          
     73            	
     74            	/* UART0 and UART1 are clocked from the core clock, but all other UARTs are
     75                   * clocked from the peripheral clock. So we have to determine which clock
     76                   * to send to the uart_init function.
     77                   */
     78              //    if ((TERM_PORT == UART0_BASE_PTR) | (TERM_PORT == UART1_BASE_PTR))  //¼ÆËã²¨ÌØÂÊ£¬´®¿Ú0¡¢1Ê¹ÓÃÄÚºËÊ±ÖÓ£¬ÆäËü´®¿ÚÊ¹ÓÃÍâÉèÊ±ÖÓ
     79              //        uart_init (TERM_PORT, core_clk_khz, TERMINAL_BAUD);
     80              //    else
     81              //	    uart_init (TERM_PORT, periph_clk_khz, TERMINAL_BAUD); //³õÊ¼»¯Ê¹ÓÃ´®¿ÚµÄÍ¨ÐÅ²¨ÌØÂÊ
     82          }
   \   00000046   0xBD01             POP      {R0,PC}          ;; return
     83          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     84          void trace_clk_init(void)
     85          {
     86          	/* Set the trace clock to the core clock frequency */
     87          	SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;
   \                     trace_clk_init:
   \   00000000   0x....             LDR.N    R0,??DataTable2_5  ;; 0x40048004
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   00000008   0x....             LDR.N    R1,??DataTable2_5  ;; 0x40048004
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     88          
     89          	/* Enable the TRACE_CLKOUT pin function on PTA6 (alt7 function) */
     90          	PORTA_PCR6 = ( PORT_PCR_MUX(0x7));
   \   0000000C   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40049018
   \   0000000E   0xF44F 0x61E0      MOV      R1,#+1792
   \   00000012   0x6001             STR      R1,[R0, #+0]
     91          }
   \   00000014   0x4770             BX       LR               ;; return
     92          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     93          void fb_clk_init(void)
     94          {
     95          	/* Enable the clock to the FlexBus module */
     96                  SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \                     fb_clk_init:
   \   00000000   0x....             LDR.N    R0,??DataTable2_7  ;; 0x40048040
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000008   0x....             LDR.N    R1,??DataTable2_7  ;; 0x40048040
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     97          
     98           	/* Enable the FB_CLKOUT function on PTC3 (alt5 function) */
     99          	PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   0000000C   0x....             LDR.N    R0,??DataTable2_8  ;; 0x4004b00c
   \   0000000E   0xF44F 0x61A0      MOV      R1,#+1280
   \   00000012   0x6001             STR      R1,[R0, #+0]
    100          }
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     core_clk_mhz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     core_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x40048044         DC32     0x40048044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     periph_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x40048004         DC32     0x40048004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x40049018         DC32     0x40049018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x40048040         DC32     0x40048040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x4004B00C         DC32     0x4004b00c
    101          /********************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  fb_clk_init
        8  sysinit
             8 -> fb_clk_init
             8 -> pll_init
             8 -> trace_clk_init
        0  trace_clk_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  core_clk_khz
       4  core_clk_mhz
      22  fb_clk_init
       4  periph_clk_khz
      72  sysinit
      22  trace_clk_init

 
  12 bytes in section .bss
 152 bytes in section .text
 
 152 bytes of CODE memory
  12 bytes of DATA memory

Errors: none
Warnings: none
