C51 COMPILER V9.00   UART                                                                  09/24/2013 17:41:15 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN UART.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE UART.C ROM(COMPACT) OPTIMIZE(6,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "typedef.h"
   2          #include "gpio.h"
   3          #include "uart.h"
   4          
   5          
   6          static bit bUartFlag;
   7          
   8          
   9          //sfr  AUXR = 0x8E;
  10          sbit RXB = P3^0; //define UART TX/RX port
  11          
  12          sbit TXB = P3^1;
  13          
  14          //typedef bit BOOL;
  15          //typedef unsigned char BYTE;
  16          //typedef unsigned int WORD;
  17          
  18          unsigned char TBUF,RBUF;
  19          
  20          unsigned char TDAT,RDAT;
  21          
  22          unsigned char TCNT,RCNT;
  23          
  24          unsigned char TBIT,RBIT;
  25          
  26           bit TING,RING;
  27          
  28           bit TEND,REND;
  29          
  30          unsigned char t, r;
  31          
  32          unsigned char buf[33];
  33          
  34          
  35          
  36          //initial UART module variable
  37          
  38          
  39           void UART_INIT(void)
  40                  {
  41   1                      TING=0;
  42   1                      RING=0;
  43   1                      TEND=1;
  44   1                      REND=0;
  45   1                      TCNT=0;
  46   1                      RCNT=0;
  47   1              }
  48          
  49          /******************************************************************************/
  50          // 函数名称：uartInit 
  51          // 输入参数：无 
  52          // 输出参数：无 
  53          // 函数功能：设置好定时器0的工作模式 
  54          /******************************************************************************/
  55          void uartInit(void)
C51 COMPILER V9.00   UART                                                                  09/24/2013 17:41:15 PAGE 2   

  56          {
  57   1          /*
  58   1           * 设置定时器0为16位自动重载定时器
  59   1          */
  60   1      
  61   1              TMOD = 0x00; //设置定时器为模式0(16位自动重装载)
  62   1          AUXR = 0xC0; //定时器0为1T模式   同时初始化 定时器1为1T模式
  63   1          
  64   1              //TL0 = (0xFFFF - MCU_FREQ / UART_BUAD) & 0xFF; //设置定时初值
  65   1              //TH0 = ((0xFFFF - MCU_FREQ / UART_BUAD) >> 8) & 0xFF; //设置定时初值
  66   1          
  67   1              
  68   1              TL0 = BAUD;
  69   1          TH0 = BAUD>>8;
  70   1              
  71   1              
  72   1              TR0 = 1; //定时器0开始计时
  73   1          ET0 = 1; //使能定时器0中断
  74   1              PT0 = 1;
  75   1          EA = 1;  //开总中断
  76   1      
  77   1              UART_INIT();    //开波特率发生器定时器
  78   1      
  79   1      
  80   1      
  81   1      }
  82          
  83          
  84          /******************************************************************************/
  85          // 函数名称：time0ISR 
  86          // 输入参数：无 
  87          // 输出参数：无 
  88          // 函数功能：串口0服务函数 
  89          /******************************************************************************/
  90          void time0ISR(void) interrupt 1 using 1
  91          {
  92   1      
  93   1        if (RING)
  94   1              {
  95   2              if (--RCNT == 0)
  96   2              {
  97   3                      RCNT = 3; //reset send baudrate counter
  98   3                      if (--RBIT == 0)
  99   3                      {
 100   4                              RBUF = RDAT; //save the data to RBUF
 101   4                              RING = 0; //stop receive
 102   4                              REND = 1; //set receive completed flag
 103   4                      }
 104   3                      else
 105   3                      {
 106   4                              RDAT >>= 1;
 107   4                              if (RXB) RDAT |= 0x80; //shift RX data to RX buffer
 108   4                      }
 109   3                }
 110   2              }
 111   1         else if (!RXB)
 112   1         {
 113   2                      RING = 1; //set start receive flag
 114   2                      RCNT = 4; //initial receive baudrate counter
 115   2                      RBIT = 9; //initial receive bit number (8 data bits + 1 stop bit)
 116   2              }
 117   1         if (--TCNT == 0)
C51 COMPILER V9.00   UART                                                                  09/24/2013 17:41:15 PAGE 3   

 118   1              {
 119   2                      TCNT = 3; //reset send baudrate counter
 120   2                      if (TING) //judge whether sending
 121   2                      {
 122   3                              if (TBIT == 0)
 123   3                              {
 124   4                                      TXB = 0; //send start bit
 125   4                                      TDAT = TBUF; //load data from TBUF to TDAT
 126   4                                      TBIT = 9; //initial send bit number (8 data bits + 1 stop bit)
 127   4                              }
 128   3                     else
 129   3                              {
 130   4                                      TDAT >>= 1; //shift data to CY
 131   4                                      if (--TBIT == 0)
 132   4                                      {
 133   5                                              TXB = 1;
 134   5                                              TING = 0; //stop send
 135   5                                              TEND = 1; //set send completed flag
 136   5                                      }
 137   4                                      else
 138   4                                      {
 139   5                                              TXB = CY; //write CY to TX port
 140   5                                       }
 141   4                              }
 142   3                      }
 143   2              }
 144   1      }
 145          
 146          
 147          
 148          
 149          
 150          
 151          
 152          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     43    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
